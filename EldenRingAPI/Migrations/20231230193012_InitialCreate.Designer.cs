// <auto-generated />
using System;
using EldenRingAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EldenRingAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231230193012_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EldenRingAPI.Models.Armor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("DmgNegationId")
                        .HasColumnType("integer");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("ResistanceId")
                        .HasColumnType("integer");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("DmgNegationId");

                    b.HasIndex("ResistanceId");

                    b.ToTable("Armors");
                });

            modelBuilder.Entity("EldenRingAPI.Models.AttackDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AttackDetails");
                });

            modelBuilder.Entity("EldenRingAPI.Models.Boss", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string[]>("Drops")
                        .HasColumnType("text[]");

                    b.Property<string>("HealthPoints")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Bosses");
                });

            modelBuilder.Entity("EldenRingAPI.Models.DamageNegationDetails", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DamageNegationDetails");
                });

            modelBuilder.Entity("EldenRingAPI.Models.DefenceDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DefenceDetails");
                });

            modelBuilder.Entity("EldenRingAPI.Models.Item", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Effect")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("EldenRingAPI.Models.PlayerClass", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Stats")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PlayerClasses");
                });

            modelBuilder.Entity("EldenRingAPI.Models.RequiredAttributes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RequiredAttributes");
                });

            modelBuilder.Entity("EldenRingAPI.Models.ResistanceDetails", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ResistanceDetails");
                });

            modelBuilder.Entity("EldenRingAPI.Models.ScalingDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Scaling")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ScalingDetails");
                });

            modelBuilder.Entity("EldenRingAPI.Models.Shield", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int?>("AttackId")
                        .HasColumnType("integer");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<int?>("DefenceId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("RequiredAttributesId")
                        .HasColumnType("integer");

                    b.Property<int?>("ScalesWithId")
                        .HasColumnType("integer");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("AttackId");

                    b.HasIndex("DefenceId");

                    b.HasIndex("RequiredAttributesId");

                    b.HasIndex("ScalesWithId");

                    b.ToTable("Shields");
                });

            modelBuilder.Entity("EldenRingAPI.Models.Sorcery", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<double>("Cost")
                        .HasColumnType("double precision");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Effects")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("RequiresId")
                        .HasColumnType("integer");

                    b.Property<int>("Slots")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RequiresId");

                    b.ToTable("Sorceries");
                });

            modelBuilder.Entity("EldenRingAPI.Models.Weapon", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int?>("AttackId")
                        .HasColumnType("integer");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<int?>("DefenceId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("RequiredAttributesId")
                        .HasColumnType("integer");

                    b.Property<int?>("ScalesWithId")
                        .HasColumnType("integer");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("AttackId");

                    b.HasIndex("DefenceId");

                    b.HasIndex("RequiredAttributesId");

                    b.HasIndex("ScalesWithId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("EldenRingAPI.Models.Armor", b =>
                {
                    b.HasOne("EldenRingAPI.Models.DamageNegationDetails", "DmgNegation")
                        .WithMany()
                        .HasForeignKey("DmgNegationId");

                    b.HasOne("EldenRingAPI.Models.ResistanceDetails", "Resistance")
                        .WithMany()
                        .HasForeignKey("ResistanceId");

                    b.Navigation("DmgNegation");

                    b.Navigation("Resistance");
                });

            modelBuilder.Entity("EldenRingAPI.Models.Shield", b =>
                {
                    b.HasOne("EldenRingAPI.Models.AttackDetails", "Attack")
                        .WithMany()
                        .HasForeignKey("AttackId");

                    b.HasOne("EldenRingAPI.Models.DefenceDetails", "Defence")
                        .WithMany()
                        .HasForeignKey("DefenceId");

                    b.HasOne("EldenRingAPI.Models.RequiredAttributes", "RequiredAttributes")
                        .WithMany()
                        .HasForeignKey("RequiredAttributesId");

                    b.HasOne("EldenRingAPI.Models.ScalingDetails", "ScalesWith")
                        .WithMany()
                        .HasForeignKey("ScalesWithId");

                    b.Navigation("Attack");

                    b.Navigation("Defence");

                    b.Navigation("RequiredAttributes");

                    b.Navigation("ScalesWith");
                });

            modelBuilder.Entity("EldenRingAPI.Models.Sorcery", b =>
                {
                    b.HasOne("EldenRingAPI.Models.RequiredAttributes", "Requires")
                        .WithMany()
                        .HasForeignKey("RequiresId");

                    b.Navigation("Requires");
                });

            modelBuilder.Entity("EldenRingAPI.Models.Weapon", b =>
                {
                    b.HasOne("EldenRingAPI.Models.AttackDetails", "Attack")
                        .WithMany()
                        .HasForeignKey("AttackId");

                    b.HasOne("EldenRingAPI.Models.DefenceDetails", "Defence")
                        .WithMany()
                        .HasForeignKey("DefenceId");

                    b.HasOne("EldenRingAPI.Models.RequiredAttributes", "RequiredAttributes")
                        .WithMany()
                        .HasForeignKey("RequiredAttributesId");

                    b.HasOne("EldenRingAPI.Models.ScalingDetails", "ScalesWith")
                        .WithMany()
                        .HasForeignKey("ScalesWithId");

                    b.Navigation("Attack");

                    b.Navigation("Defence");

                    b.Navigation("RequiredAttributes");

                    b.Navigation("ScalesWith");
                });
#pragma warning restore 612, 618
        }
    }
}
